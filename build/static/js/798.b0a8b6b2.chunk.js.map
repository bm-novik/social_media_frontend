{"version":3,"file":"static/js/798.b0a8b6b2.chunk.js","mappings":"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","sources":["components/header/profilePage/ProfilePageImage.js","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/Link.js","components/header/profilePage/ProfilePageNameAndBio.js","components/header/profilePage/ProfilePageHeader.js","components/tabs/ProfileTabControl.js","components/header/profilePage/AuthUserProfilePageHeader.js","pages/Profile.page.js","../node_modules/@mui/icons-material/AccountBoxOutlined.js","../node_modules/@mui/icons-material/GridView.js","../node_modules/@mui/icons-material/SettingsOutlined.js","../node_modules/@mui/icons-material/TurnedInNot.js","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","../node_modules/src/useInView.tsx"],"sourcesContent":["import {Grid} from \"@mui/material\";\r\nimport {StyledRoundImageBox} from \"../../boxs/Box.styles\";\r\nimport Image from \"mui-image\";\r\n\r\nexport const ProfilePageImage = ({data, handleUpdatePictureModalClick=null}) => {\r\n return (\r\n     <Grid item sx={{width: '33ch'}}>\r\n         <StyledRoundImageBox\r\n             onClick={handleUpdatePictureModalClick}>\r\n             <Image src={`${data?.profile?.profile_pic}`}/>\r\n         </StyledRoundImageBox>\r\n     </Grid>\r\n );\r\n};\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, getPath } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\n\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const color = getPath(theme, `palette.${transformDeprecatedColors(ownerState.color)}`) || ownerState.color;\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && {\n    textDecoration: 'underline',\n    textDecorationColor: color !== 'inherit' ? alpha(color, 0.4) : undefined,\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }, ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'always',\n    variant = 'inherit'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","import Typography from \"@mui/material/Typography\";\r\nimport {Link} from \"@mui/material\";\r\n\r\nexport const ProfilePageNameAndBio = ({data}) => {\r\n    return (\r\n        <>\r\n            <Typography\r\n                variant=\"h6\"\r\n                component=\"div\"\r\n                sx={{spacing: 1, '&.MuiTypography-root': {fontFamily: 'Quicksand'}}}>\r\n                {data?.profile?.first_name} {data?.profile?.last_name}\r\n                <Typography variant=\"body1\"\r\n                            sx={{spacing: 1, '&.MuiTypography-root': {fontFamily: 'Quicksand'}}}>\r\n                    {data?.profile?.bio}\r\n                </Typography>\r\n            </Typography>\r\n            <Link sx={{fontFamily: 'Quicksand', lineHeight:'4ch', fontSize: '2ch'}} href={data?.profile?.website} variant=\"body2\">{data?.profile?.website}</Link>\r\n        </>\r\n    );\r\n};\r\n","import {Grid} from \"@mui/material\";\r\nimport {StyledProfileHeaderBox} from \"../../boxs/Box.styles\";\r\nimport {ProfileColoredOutlinedButton, ProfileModalButton, ProfileOutlinedButton} from \"../../button/Button.styles\";\r\nimport {ProfilePageImage} from \"./ProfilePageImage\";\r\nimport {ProfilePageNameAndBio} from \"./ProfilePageNameAndBio\";\r\nimport {StyledProfileButtonLineTypography} from \"../../typography/TypographyControl\";\r\nimport AccountCircleOutlinedIcon from '@mui/icons-material/AccountCircleOutlined';\r\nimport {useFollowCreateData, useFollowingDeleteData} from \"../../../hooks/useProfile.data\";\r\nimport {useQueryClient} from \"react-query\";\r\n\r\n\r\nexport const ProfilePageHeader = ({ data, handleFollowModalClick }) => {\r\n    const queryClient = useQueryClient()\r\n\r\n    const onSuccessRemove = () => {\r\n        queryClient.invalidateQueries('useProfileDetail')\r\n    }\r\n\r\n    const onSuccessFollow = () => {\r\n        queryClient.invalidateQueries('useProfileDetail')\r\n    }\r\n    const {mutate: deleteFollowingData} = useFollowingDeleteData(onSuccessRemove)\r\n    const {mutate: createFollowingData} = useFollowCreateData(onSuccessFollow)\r\n\r\n    return (\r\n        <StyledProfileHeaderBox sx={{width: '100%',}}>\r\n            <Grid container rowSpacing={5} columnSpacing={{xs: 1, sm: 2, md: 3}}\r\n                  sx={{minWidth: 275, backgroundColor: 'transference', justifyContent: 'center'}}>\r\n\r\n                <ProfilePageImage data={data} />\r\n\r\n                <Grid item sx={{mt: '5px',width: '55ch' }}>\r\n\r\n                    <StyledProfileButtonLineTypography\r\n                        variant=\"h5\"\r\n                        component=\"div\">\r\n                        {data?.profile?.first_name} {data?.profile?.last_name}\r\n\r\n                        {data?.profile?.follow_status ?\r\n                            <ProfileOutlinedButton aria-label=\"Following\" variant=\"outlined\" onClick={() => deleteFollowingData({object_id: data.id})}>\r\n                                <AccountCircleOutlinedIcon sx={{width: '0.7em', height: '0.7em', marginRight: '1ch'}}/>\r\n                                Following\r\n                            </ProfileOutlinedButton>\r\n                            :\r\n                            <ProfileColoredOutlinedButton aria-label=\"Follow\" variant=\"outlined\" onClick={() => createFollowingData({object_id: data.id})}>\r\n                                Follow\r\n                            </ProfileColoredOutlinedButton>\r\n                        }\r\n                    </StyledProfileButtonLineTypography>\r\n\r\n\r\n                    <StyledProfileButtonLineTypography\r\n                        variant=\"subtitle1\"\r\n                        component=\"div\">\r\n\r\n                        {data?.profile?.post_count} posts\r\n                        <ProfileModalButton onClick={() => handleFollowModalClick('other', 'follower')}>\r\n                            {data?.profile?.followers_count} followers\r\n                        </ProfileModalButton>\r\n                        <ProfileModalButton onClick={() => handleFollowModalClick('other', 'following')}>\r\n                            {data?.profile?.following_count} following\r\n                        </ProfileModalButton>\r\n                    </StyledProfileButtonLineTypography>\r\n\r\n                    <ProfilePageNameAndBio data={data} />\r\n                </Grid>\r\n            </Grid>\r\n        </StyledProfileHeaderBox>\r\n    );\r\n};\r\n","import {LabelControl} from \"./iconTab/LableControl\";\r\nimport {makeStyles} from \"@mui/styles\";\r\nimport {MyPink} from \"../../utils/color-utils\";\r\nimport TurnedInNotIcon from \"@mui/icons-material/TurnedInNot\";\r\nimport AccountBoxOutlinedIcon from \"@mui/icons-material/AccountBoxOutlined\";\r\nimport GridViewIcon from \"@mui/icons-material/GridView\";\r\nimport {TabList} from \"@mui/lab\";\r\n\r\n\r\nconst useStyle = makeStyles({\r\n    indicator: {\r\n        top: \"0px\",\r\n        height: 0.5,\r\n        backgroundColor: MyPink,\r\n\r\n    }\r\n});\r\n\r\n\r\n//MuiTabs-flexContainer -> justify-content: space-around;\r\n\r\nexport const ProfileTabsControl = ({handleChange}) => {\r\n    const classes = useStyle();\r\n\r\n    return (\r\n\r\n        <TabList\r\n            classes={{\r\n                indicator: classes.indicator\r\n            }}\r\n            onChange={handleChange}\r\n            aria-label=\"Profile page tabs\"\r\n\r\n        >\r\n            <LabelControl\r\n                control={'icon'}\r\n                value={'post'}\r\n                label={'POST'}\r\n                setValue={handleChange}\r\n                icon={<GridViewIcon/>}\r\n\r\n            />\r\n\r\n            <LabelControl\r\n                control={'icon'}\r\n                value={'save'}\r\n                label={'SAVED'}\r\n                setValue={handleChange}\r\n                icon={<TurnedInNotIcon/>}\r\n            />\r\n            <LabelControl\r\n                control={'icon'}\r\n                value={'tagged'}\r\n                label={'TAGGED'}\r\n                setValue={handleChange}\r\n                icon={<AccountBoxOutlinedIcon/>}\r\n            />\r\n        </TabList>\r\n    )\r\n}\r\n\r\n","import {Grid} from \"@mui/material\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport SettingsOutlinedIcon from \"@mui/icons-material/SettingsOutlined\";\r\nimport {StyledProfileHeaderBox} from \"../../boxs/Box.styles\";\r\nimport {ProfileModalButton, ProfileOutlinedButton} from \"../../button/Button.styles\";\r\nimport {ProfilePageImage} from \"./ProfilePageImage\";\r\nimport {ProfilePageNameAndBio} from \"./ProfilePageNameAndBio\";\r\nimport {StyledProfileButtonLineTypography} from \"../../typography/TypographyControl\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {UpdateProfilePictureModal} from \"../../modalPages/UpdateProfilePicture.modal.page\";\r\nimport {useState} from \"react\";\r\n\r\nexport const AuthUserProfilePageHeader = ({data, handleFollowModalClick}) => {\r\n    const navigate = useNavigate()\r\n    const [openUpdatePicture, setOpenUpdatePicture] = useState(false)\r\n\r\n    const handleUpdatePictureModalClick = () => {\r\n        setOpenUpdatePicture(!openUpdatePicture)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <UpdateProfilePictureModal open={openUpdatePicture} handleModalClick={handleUpdatePictureModalClick} />\r\n            <StyledProfileHeaderBox sx={{width: '100%',}}>\r\n                <Grid container rowSpacing={5} columnSpacing={{xs: 1, sm: 2, md: 3}}\r\n                      sx={{minWidth: 275, backgroundColor: 'transference', justifyContent: 'center'}}>\r\n\r\n                    <ProfilePageImage data={data} handleUpdatePictureModalClick={handleUpdatePictureModalClick}/>\r\n\r\n                    <Grid item sx={{mt: '5px', width: '55ch'}}>\r\n\r\n                        <StyledProfileButtonLineTypography\r\n                            variant=\"h5\"\r\n                            component=\"div\">\r\n                            {data?.username}\r\n\r\n                            <ProfileOutlinedButton variant=\"outlined\" onClick={() => navigate('/accounts/edit')}>\r\n                                Edit profile\r\n                            </ProfileOutlinedButton>\r\n\r\n                            <IconButton aria-label=\"settings\" onClick={() => console.log('Settings click')}>\r\n                                <SettingsOutlinedIcon/>\r\n                            </IconButton>\r\n\r\n                        </StyledProfileButtonLineTypography>\r\n\r\n                        <StyledProfileButtonLineTypography\r\n                            variant=\"subtitle1\"\r\n                            component=\"div\">\r\n\r\n                            {data?.profile?.post_count} posts\r\n                            <ProfileModalButton onClick={() => handleFollowModalClick('user', 'follower')}>\r\n                                {data?.profile?.followers_count} followers\r\n                            </ProfileModalButton>\r\n                            <ProfileModalButton onClick={() => handleFollowModalClick('user', 'following')}>\r\n                                {data?.profile?.following_count} following\r\n                            </ProfileModalButton>\r\n                        </StyledProfileButtonLineTypography>\r\n\r\n                        <ProfilePageNameAndBio data={data}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </StyledProfileHeaderBox>\r\n        </>\r\n    );\r\n};\r\n","// React\r\nimport { useState, Fragment, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useRecoilValue } from \"recoil\";\r\n\r\n// MUI\r\nimport { Grid } from \"@mui/material\";\r\nimport { TabContext, TabPanel } from \"@mui/lab\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n// 3d party\r\nimport {  useInView  } from 'react-intersection-observer'\r\n\r\n// React-Query hooks\r\nimport {\r\n    useProfileDetailData,\r\n    useProfilePostListData,\r\n    useFollowersData,\r\n    useFollowingData\r\n} from \"../hooks/useProfile.data\";\r\n\r\n// Recoil global state\r\nimport { AuthenticatedAtom } from \"../recoil/atom/AtomStore\";\r\n\r\n// Components\r\nimport { MySecondary } from \"../utils/color-utils\";\r\nimport { ProfilePageHeader } from \"../components/header/profilePage/ProfilePageHeader\";\r\nimport { FollowModal } from \"../components/modalPages/Follow.modal.page\";\r\nimport { StyledTabControllerBox } from \"../components/boxs/Box.styles\";\r\nimport { ProfilePageImageList } from \"../components/list/ListControl\";\r\nimport { WindowLoader } from \"../components/layout/icons/Loader\";\r\nimport { ProfileTabsControl } from \"../components/tabs/ProfileTabControl\";\r\nimport { PostDetailsModal } from \"../components/modalPages/PostDetails.modal.page\";\r\nimport { AuthUserProfilePageHeader } from \"../components/header/profilePage/AuthUserProfilePageHeader\";\r\n\r\nconst UserProfile = () => {\r\n    // State control\r\n    let {id} = useParams()\r\n    const auth = useRecoilValue(AuthenticatedAtom)\r\n    const { ref, inView } = useInView()\r\n\r\n    // Post State control\r\n    const [clickedPost, setClickedPost] = useState(null)\r\n\r\n    // Modal State control\r\n    const [postModalOpen, setPostModalOpen] = useState(false)\r\n    const [followModalOpen, setFollowModalOpen] = useState(false)\r\n\r\n    const [isUser, setIsUser] = useState(null)\r\n    const [followState, setFollowState] = useState(null)\r\n\r\n\r\n    const [tabValue, setTabValue] = useState('post');\r\n\r\n\r\n    // Handlers\r\n    const handlePostModalClick = ({post}) => {\r\n        setClickedPost(post?.id)\r\n        setPostModalOpen(!postModalOpen)\r\n    }\r\n\r\n    const handleFollowModalClick = (isUser, follow) => {\r\n        if (isUser === 'user') {\r\n            setIsUser(true)\r\n        } else {\r\n            setIsUser(false)\r\n        }\r\n        if (!followModalOpen) {\r\n            // follow=== 'follower' ?\r\n            //     followersRefetch() : followingRefetch()\r\n            setFollowState(follow)\r\n        }\r\n        setFollowModalOpen(!followModalOpen)\r\n    }\r\n\r\n    const handleTabChange = (newValue) => {\r\n        setTabValue(newValue);\r\n    }\r\n\r\n    // React-Query Logic\r\n    useEffect(() => {\r\n        if (inView) fetchNextPage()\r\n    }, [inView])\r\n\r\n    const getNextPageParam = (_lastPage, pages) => pages[(pages.length) - 1].data.next ?? undefined\r\n\r\n    const { data, fetchNextPage, isLoading, isFetching, isFetchingNextPage, hasNextPage }\r\n        = useProfilePostListData(getNextPageParam, id)\r\n    const {isSuccess: userDataIsSuccess, data: userData, isLoading: isProfileDataLoading}\r\n        = useProfileDetailData(id)\r\n    const {isSuccess: FollowerIsSuccess, isLoading: FollowerIsLoading, data: followersData, refetch: followersRefetch}\r\n        = useFollowersData(id)\r\n    const {\r\n        isSuccess: FollowingIsSuccess, isLoading: FollowingIsLoading, data: followingData, refetch: followingRefetch}\r\n        = useFollowingData(id)\r\n\r\n    return (\r\n        <>\r\n            {(isLoading || isFetching || isProfileDataLoading) && <WindowLoader/>}\r\n\r\n            {/* MODALS */}\r\n            <PostDetailsModal\r\n                open={postModalOpen}\r\n                handleModalClick={handlePostModalClick}\r\n                post={clickedPost}\r\n            />\r\n\r\n            <FollowModal\r\n                open={followModalOpen}\r\n                handleModalClick={handleFollowModalClick}\r\n                data={followState ==='follower' ? followersData?.data : followingData?.data}\r\n                isSuccess={followState ==='follower' ? FollowerIsSuccess : FollowingIsSuccess}\r\n                isLoading={followState ==='follower' ? FollowerIsLoading: FollowingIsLoading}\r\n                followState={followState}\r\n                isUser={isUser}\r\n            />\r\n\r\n            {/* PAGE LAYOUT */}\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"baseline\"\r\n                sx={{maxWidth: '125ch'}}\r\n            >\r\n                {/* HEADER */}\r\n                <Grid item sx={{display: 'flex', height: '20ch', maxWidth: '125ch', mb: 12, mx: 'auto'}}>\r\n                    {userDataIsSuccess &&\r\n                    (userData?.data?.id === auth.profileId) ?\r\n                        <AuthUserProfilePageHeader\r\n                            data={userData?.data}\r\n                            handleFollowModalClick={handleFollowModalClick}\r\n                        /> :\r\n                        <ProfilePageHeader\r\n                            data={userData?.data}\r\n                            handleFollowModalClick={handleFollowModalClick}\r\n                        />\r\n                    }\r\n                </Grid>\r\n\r\n                {/* BODY */}\r\n                <Grid item sx={{\r\n                    borderTop: 'groove',\r\n                    borderColor: MySecondary,\r\n                    borderBlockWidth: '1px',\r\n                    width: '100%',\r\n\r\n                }}>\r\n                    {/* TABS SELECTION*/}\r\n                    <TabContext value={tabValue}>\r\n                        <StyledTabControllerBox sx={{'& .MuiTabs-flexContainer': {justifyContent: 'space-around'}}}>\r\n                            <ProfileTabsControl handleChange={handleTabChange}/>\r\n                        </StyledTabControllerBox>\r\n                        <TabPanel value='post'>\r\n\r\n                            {/* IMAGE GALLERY*/}\r\n                                {data?.pages.map((group, i) => {\r\n                                    return (\r\n                                        <Fragment key={i}>\r\n                                            <ProfilePageImageList group={group?.data?.results}\r\n                                                                  handleModalClick={handlePostModalClick}/>\r\n\r\n                                        </Fragment>\r\n                                    )\r\n                                })}\r\n                            <div>\r\n                            <Button\r\n                                sx={{display: 'none'}}\r\n                                ref={ref}\r\n                                onClick={() => fetchNextPage()}\r\n                                disabled={!hasNextPage || isFetchingNextPage}\r\n                            />\r\n                        </div>\r\n                        {/*    TO BE IMPLEMENTED*/}\r\n                        </TabPanel>\r\n                        <TabPanel value='save'>saved items</TabPanel>\r\n                        <TabPanel value='tagged'>tagged</TabPanel>\r\n\r\n                    </TabContext>\r\n\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserProfile","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 9c-1.65 0-3-1.35-3-3s1.35-3 3-3 3 1.35 3 3-1.35 3-3 3zm0-4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm6 10H6v-1.53c0-2.5 3.97-3.58 6-3.58s6 1.08 6 3.58V18zm-9.69-2h7.38c-.69-.56-2.38-1.12-3.69-1.12s-3.01.56-3.69 1.12z\"\n}), 'AccountBoxOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M3 3v8h8V3H3zm6 6H5V5h4v4zm-6 4v8h8v-8H3zm6 6H5v-4h4v4zm4-16v8h8V3h-8zm6 6h-4V5h4v4zm-6 4v8h8v-8h-8zm6 6h-4v-4h4v4z\"\n}), 'GridView');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19.43 12.98c.04-.32.07-.64.07-.98 0-.34-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.09-.16-.26-.25-.44-.25-.06 0-.12.01-.17.03l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.06-.02-.12-.03-.18-.03-.17 0-.34.09-.43.25l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98 0 .33.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.09.16.26.25.44.25.06 0 .12-.01.17-.03l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.06.02.12.03.18.03.17 0 .34-.09.43-.25l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zm-1.98-1.71c.04.31.05.52.05.73 0 .21-.02.43-.05.73l-.14 1.13.89.7 1.08.84-.7 1.21-1.27-.51-1.04-.42-.9.68c-.43.32-.84.56-1.25.73l-1.06.43-.16 1.13-.2 1.35h-1.4l-.19-1.35-.16-1.13-1.06-.43c-.43-.18-.83-.41-1.23-.71l-.91-.7-1.06.43-1.27.51-.7-1.21 1.08-.84.89-.7-.14-1.13c-.03-.31-.05-.54-.05-.74s.02-.43.05-.73l.14-1.13-.89-.7-1.08-.84.7-1.21 1.27.51 1.04.42.9-.68c.43-.32.84-.56 1.25-.73l1.06-.43.16-1.13.2-1.35h1.39l.19 1.35.16 1.13 1.06.43c.43.18.83.41 1.23.71l.91.7 1.06-.43 1.27-.51.7 1.21-1.07.85-.89.7.14 1.13zM12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n}), 'SettingsOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2zm0 15-5-2.18L7 18V5h10v13z\"\n}), 'TurnedInNot');\n\nexports.default = _default;","import type { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter((key) => options[key] !== undefined)\n    .map((key) => {\n      return `${key}_${\n        key === 'root' ? getRootId(options.root) : options[key]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport type { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    if (!isPlainChildren(this.props)) {\n      const { inView, entry } = this.state;\n      return this.props.children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      children,\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from 'react';\nimport type { InViewHookResponse, IntersectionOptions } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const unobserve = React.useRef<Function>();\n  const callback = React.useRef<IntersectionOptions['onChange']>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n  });\n  // Store the onChange callback in a `ref`, so we can access the latest instance inside the `useCallback`.\n  callback.current = onChange;\n\n  const setRef = React.useCallback(\n    (node: Element | null) => {\n      if (unobserve.current !== undefined) {\n        unobserve.current();\n        unobserve.current = undefined;\n      }\n\n      // Skip creating the observer\n      if (skip) return;\n\n      if (node) {\n        unobserve.current = observe(\n          node,\n          (inView, entry) => {\n            setState({ inView, entry });\n            if (callback.current) callback.current(inView, entry);\n\n            if (entry.isIntersecting && triggerOnce && unobserve.current) {\n              // If it should only trigger once, unobserve the element after it's inView\n              unobserve.current();\n              unobserve.current = undefined;\n            }\n          },\n          {\n            root,\n            rootMargin,\n            threshold,\n            // @ts-ignore\n            trackVisibility,\n            // @ts-ignore\n            delay,\n          },\n          fallbackInView,\n        );\n      }\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  /* eslint-disable-next-line */\n  React.useEffect(() => {\n    if (!unobserve.current && state.entry && !triggerOnce && !skip) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView,\n      });\n    }\n  });\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n"],"names":["ProfilePageImage","data","handleUpdatePictureModalClick","Grid","item","sx","width","onClick","src","profile","profile_pic","getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","colorTransformations","primary","textPrimary","secondary","textSecondary","error","LinkRoot","styled","Typography","name","overridesResolver","props","styles","ownerState","root","capitalize","underline","component","button","theme","color","getPath","transformDeprecatedColors","_extends","textDecoration","textDecorationColor","alpha","undefined","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","React","inProps","ref","useThemeProps","className","onBlur","onFocus","TypographyClasses","variant","other","_objectWithoutPropertiesLoose","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","focusVisible","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","event","current","ProfilePageNameAndBio","spacing","fontFamily","first_name","last_name","bio","lineHeight","fontSize","href","website","ProfilePageHeader","handleFollowModalClick","queryClient","useQueryClient","deleteFollowingData","useFollowingDeleteData","invalidateQueries","mutate","createFollowingData","useFollowCreateData","container","rowSpacing","columnSpacing","xs","sm","md","minWidth","justifyContent","mt","follow_status","object_id","id","AccountCircleOutlined","height","marginRight","post_count","followers_count","following_count","useStyle","makeStyles","indicator","top","MyPink","ProfileTabsControl","handleChange","TabList","onChange","control","value","label","setValue","icon","GridView","TurnedInNot","AccountBoxOutlined","AuthUserProfilePageHeader","navigate","useNavigate","useState","openUpdatePicture","setOpenUpdatePicture","open","handleModalClick","username","IconButton","console","log","SettingsOutlined","useParams","auth","useRecoilValue","AuthenticatedAtom","useInView","inView","clickedPost","setClickedPost","postModalOpen","setPostModalOpen","followModalOpen","setFollowModalOpen","isUser","setIsUser","followState","setFollowState","tabValue","setTabValue","handlePostModalClick","post","follow","useEffect","fetchNextPage","useProfilePostListData","_lastPage","pages","length","next","isLoading","isFetching","isFetchingNextPage","hasNextPage","useProfileDetailData","userDataIsSuccess","isSuccess","userData","isProfileDataLoading","useFollowersData","FollowerIsSuccess","FollowerIsLoading","followersData","refetch","useFollowingData","FollowingIsSuccess","FollowingIsLoading","followingData","P","direction","alignItems","maxWidth","display","mb","mx","profileId","borderTop","borderColor","MySecondary","borderBlockWidth","TabContext","newValue","TabPanel","map","group","i","Fragment","results","Button","disabled","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","fillRule","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","options","Object","keys","sort","filter","key","has","set","toString","get","observe","element","callback","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","target","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","createObserver","instance","thresholds","elements","observer","entries","forEach","entry","some","trackVisibility","isVisible","Array","isArray","callbacks","push","splice","indexOf","unobserve","size","disconnect","isPlainChildren","children","_temp","delay","rootMargin","triggerOnce","skip","initialInView","state","setState","setRef","node","result"],"sourceRoot":""}